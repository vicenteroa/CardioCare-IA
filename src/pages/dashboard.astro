---
import { app } from '../firebase/server'
import { getAuth } from 'firebase-admin/auth'
import Layout from '../layouts/Layout.astro'
import Header from '../components/Header.astro'
const auth = getAuth(app)

/* Verificar la sesión actual */
if (!Astro.cookies.has('session')) {
  return Astro.redirect('/signin')
}
const sessionCookie = Astro.cookies.get('session').value
const decodedCookie = await auth.verifySessionCookie(sessionCookie)
const user = await auth.getUser(decodedCookie.uid)

if (!user) {
  return Astro.redirect('/signin')
}
---

<Layout title="Testimonio">
  <main class="cont-fondo">
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <form action="/api/auth/signout">
      <button type="submit" class="boton-cerrar-sesion">Cerrar sesión</button>
    </form>
  </main>
  <Header
    texto1={user.displayName}
    texto2="Editar perfil"
    texto3="Novedades"
    texto4="Terminos y Condiciones"
    link4="TermsOfServices"
  />

  <form action="/api/testimonio/testimonio" method="post" id="formulario">
    <div
      class="cont-formulario"
      style="display: flex; flex-direction: column; align-items: center; height: 160vh; justify-content: center;"
    >
      <div
        class="etq-form"
        style="max-width: 1300px; width: 80%; padding: 60px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); border: 1px solid #ccc; height: auto; text-align: justify; margin-top: -10vh;"
      >
        <h2
          style="text-align: center; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; color: #007bff; font-size: 35px;margin-bottom: 18px;"
        >
          Instrucciones para proporcionar su testimonio médico:
        </h2>
        <p style="font-size: 25px; margin-bottom: 8px;">
          <br /><strong>Extensión máxima:</strong> Su testimonio médico no debe exceder los 1000 caracteres.
          Por favor, sea conciso y enfóquese en los detalles relevantes.<br />
          <br /><strong>Lenguaje apropiado:</strong> Evite el uso de palabras vulgares o inapropiadas.
          Mantenga un tono profesional y objetivo.<br />
          <br /><strong>Enfoque en lo médico:</strong> Su testimonio debe centrarse exclusivamente en
          su experiencia médica relacionada con enfermedades cardiovasculares. <br />No incluya
          información personal no relevante.<br />
          <br /><strong>Aceptación de términos y condiciones:</strong> Al proporcionar su testimonio,
          acepta los términos y condiciones que se encuentran a continuación.<br />
          <br />
        </p>
        <h2
          style="text-align: center; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; color: #007bff; font-size: 35px;margin-bottom: 17px;"
        >
          Por favor, responda las siguientes preguntas:
        </h2>
        <div style="font-size: 25px; margin-bottom: 14px;">
          <p>
            <br />¿Has experimentado dolor en el pecho o malestar en el área del corazón en las
            últimas 24 horas?
          </p>
          <br />
          <label>
            <input type="radio" name="chestPain" value="yes" /> Sí
          </label>
          <label>
            <input type="radio" name="chestPain" value="no" /> No
          </label>
        </div>
        <div style="font-size: 25px; margin-bottom: 14px;">
          <p>
            <br />¿Has notado dificultad para respirar o falta de aliento durante actividades
            cotidianas, como subir escaleras o caminar distancias cortas?
          </p>
          <br />
          <label>
            <input type="radio" name="shortnessOfBreath" value="yes" /> Sí
          </label>
          <label>
            <input type="radio" name="shortnessOfBreath" value="no" /> No
          </label>
        </div>
        <div style="font-size: 25px; margin-bottom: 14px;">
          <p>
            <br />¿Tienes antecedentes familiares de enfermedades cardíacas, como ataques al
            corazón, hipertensión o accidentes cerebrovasculares?
          </p>
          <br />
          <label>
            <input type="radio" name="familyHistory" value="yes" /> Sí
          </label>
          <label>
            <input type="radio" name="familyHistory" value="no" /> No
          </label>
        </div>
        <textarea
          rows="5"
          cols="50"
          maxlength="1100"
          minlength="200"
          placeholder="Escribe tu testimonio..."
          style="resize: none; font-size: 25px; padding: 8px; width: 100%; border: 1px solid #ccc; border-radius: 4px; box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); height: 25vh;"
          id="testimonio"
          name="textoTestimonio"></textarea>
        <span id="error-message" class="error-message"></span>
        <input type="hidden" name="nombreDeUsuario" value={user.displayName} />
        <input type="hidden" name="uid" value={user.uid} />

        <button
          type="submit"
          style="margin-top: 16px; background-color: #007bff; color: white; border: none; border-radius: 4px; padding: 8px 16px; font-size: 16px; cursor: pointer;"
          id="enviar"
        >
          Enviar
        </button>
      </div>
      <div class="contenedor">
        <img src="/doctor_registro.png" alt="Doctor Registro" />
      </div>
    </div>
  </form>
</Layout>

<script>
  import { showMessage } from '../resources/notification'
  const botonEnviar = document.querySelector('#enviar')
  botonEnviar.addEventListener('click', (event) => {
    const textarea = document.querySelector('#testimonio')
    const preguntas = document.querySelectorAll('input[type="radio"]:checked')
    const respuestasNo = document.querySelectorAll('input[type="radio"][value="no"]:checked')

    // Verificar que se hayan respondido las tres preguntas
    if (preguntas.length < 3) {
      showMessage('Por favor, responda todas las preguntas antes de enviar su testimonio.', 'error')
      event.preventDefault()
      return
    }

    // Verificar si todas las respuestas son "No"
    if (respuestasNo.length === 3) {
      showMessage('No hace falta diagnóstico.', 'error')
      event.preventDefault()
      return
    }

    // Verificar la longitud del testimonio
    if (textarea instanceof HTMLTextAreaElement) {
      const longitudTexto = textarea.value.length
      if (longitudTexto < 200) {
        showMessage(
          'El testimonio es demasiado corto. Por favor, asegúrate de que tenga al menos 200 caracteres.',
          'error'
        )
        event.preventDefault()
      } else if (longitudTexto > 1000) {
        showMessage(
          'El testimonio es demasiado largo. Por favor, asegúrate de que no exceda los 1000 caracteres.',
          'error'
        )
        event.preventDefault()
      }
    } else {
      console.error('El elemento no es un área de texto.')
    }
  })

  fetch('/words.json')
    .then((response) => response.json())
    .then((data) => {
      const forbiddenWords = data.data
      const form = document.getElementById('formulario') as HTMLFormElement
      const testimonio = document.getElementById('testimonio') as HTMLTextAreaElement
      const errorMessage = document.getElementById('error-message') as HTMLElement
      form.addEventListener('submit', function (event) {
        // Detiene el envío del formulario al principio
        event.preventDefault()
        const words = (testimonio.value + ' ')
          .split(/(\s+|[^A-Za-zÁÉÍÓÚáéíóúÑñüÜ]+)/)
          .filter(Boolean)
        let hasForbiddenWord = false
        for (const word of words) {
          if (forbiddenWords.includes(word)) {
            // Si se encuentra una palabra prohibida, muestra un mensaje de error
            errorMessage.textContent = 'Por favor, evita usar lenguaje ofensivo en tu testimonio.'
            errorMessage.style.color = 'red'
            hasForbiddenWord = true
            break
          }
        }
        // Si no se encuentra ninguna palabra prohibida, envía el formulario
        if (!hasForbiddenWord) {
          form.submit()
        }
      })
    })
</script>

<script>
  const botonEnviar = document.querySelector('#enviar')
  botonEnviar.addEventListener('click', () => {
    const textarea = document.querySelector('#testimonio') as HTMLTextAreaElement
    sessionStorage.setItem('textoTestimonio', textarea.value)
  })
</script>

<style>
  body {
    background-color: var(--background-color);
    transition: background-color 0.8s ease;
  }
  .etq-form {
    background-color: var(--background-color);
    transition: background-color 0.8s ease;
  }
  :global(.dark) .etq-form {
    background-color: var(--background-color-dark);
    transition: background-color 0.8 ease;
  }
  .cont-formulario {
    background-color: var(--background-color);
    transition: background-color 0.8s ease;
  }
  :global(.dark) .etq-form textarea {
    color: black;
  }
  .cont-fondo {
    background-color: var(--background-color);
    transition: background-color 0.8s ease;
  }
  .contenedor {
    display: flex;
    justify-content: right;
    margin-top: 500px; /* Ajusta la distancia vertical */
    position: fixed; /* Añadido para fijar la imagen en la pantalla */
    right: -50px; /* Ajusta la distancia horizontal desde la derecha */
    top: 0; /* Ajusta la distancia vertical desde la parte superior */
    filter: drop-shadow(6px 2px 15px black);
  }
  .boton-cerrar-sesion {
    display: block;
    margin-left: auto;
    margin-right: 20px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    padding: 8px 16px;
    font-size: 16px;
    cursor: pointer;
    text-align: center;
    margin-top: 110px;
  }
</style>
